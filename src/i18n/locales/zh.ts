import { TranslationKeys } from '../types'

export const zh: TranslationKeys = {
  commands: {
    openChat: '打开聊天',
    addSelectionToChat: '添加选中内容到聊天',
    rebuildVaultIndex: '重建整个库索引',
    updateVaultIndex: '更新修改文件的索引',
  },

  common: {
    save: '保存',
    cancel: '取消',
    delete: '删除',
    edit: '编辑',
    add: '添加',
    remove: '移除',
    confirm: '确认',
    close: '关闭',
    loading: '加载中...',
    error: '错误',
    success: '成功',
    warning: '警告',
    retry: '重试',
    copy: '复制',
    paste: '粘贴',
  },

  settings: {
    title: 'Smart Composer 设置',
    supportSmartComposer: {
      name: '支持 Smart Composer',
      desc: '如果你觉得 Smart Composer 有价值，请考虑支持它的开发！',
      buyMeACoffee: '请我喝杯咖啡',
    },
    chat: {
      title: '聊天',
      defaultModel: '默认聊天模型',
      applyModel: '应用模型',
      systemPrompt: '系统提示',
      includeCurrentFile: '在上下文中包含当前文件内容',
      enableTools: '启用工具',
      maxAutoIterations: '最大自动迭代次数',
    },
    assistants: {
      title: '助手',
      addAssistant: '添加助手',
      editAssistant: '编辑助手',
      deleteAssistant: '删除助手',
      name: '名称',
      systemPrompt: '系统提示',
      model: '模型',
    },
    providers: {
      title: '提供商',
      addProvider: '添加提供商',
      editProvider: '编辑提供商',
      deleteProvider: '删除提供商',
    },
    models: {
      title: '模型',
      chatModels: '聊天模型',
      embeddingModels: '嵌入模型',
      addChatModel: '添加聊天模型',
      addEmbeddingModel: '添加嵌入模型',
    },
    rag: {
      title: 'RAG (检索增强生成)',
      embeddingModel: '嵌入模型',
      chunkSize: '分块大小',
      thresholdTokens: '阈值令牌数',
      minSimilarity: '最小相似度',
      limit: '限制',
      includePatterns: '包含模式',
      excludePatterns: '排除模式',
      rebuildIndex: '重建索引',
    },
    mcp: {
      title: '模型上下文协议 (MCP)',
      addServer: '添加 MCP 服务器',
      serverName: '服务器名称',
      command: '命令',
    },
    templates: {
      title: '模板',
      addTemplate: '添加模板',
      templateName: '模板名称',
    },
    language: {
      title: '语言',
      select: '选择语言',
    },
  },

  chat: {
    placeholder: '询问关于你的库的任何问题...',
    sendMessage: '发送消息',
    newChat: '新建聊天',
    vaultSearch: '库搜索',
    selectModel: '选择模型',
    uploadImage: '上传图片',
    addContext: '添加上下文',
    applyChanges: '应用更改',
    copyMessage: '复制消息',
    regenerate: '重新生成',
    reasoning: '推理过程',
    annotations: '注释',
  },

  notices: {
    rebuildingIndex: '正在重建库索引...',
    rebuildComplete: '库索引重建完成',
    rebuildFailed: '库索引重建失败',
    updatingIndex: '正在更新库索引...',
    indexUpdated: '库索引已更新',
    indexUpdateFailed: '库索引更新失败',
    migrationComplete: 'JSON 存储迁移成功完成',
    migrationFailed: 'JSON 存储迁移失败。请查看控制台了解详情。',
    reloadingPlugin: '由于迁移，正在重新加载 "smart-composer"',
    settingsInvalid: '设置无效',
  },

  errors: {
    providerNotFound: '未找到提供商',
    modelNotFound: '未找到模型',
    invalidApiKey: 'API 密钥无效',
    networkError: '网络错误',
    databaseError: '数据库错误',
    mcpServerError: 'MCP 服务器错误',
  },
}